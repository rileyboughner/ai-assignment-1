##[pylyzer] failed /home/rileyboughner/Documents/Class/ai/assignment1/search.py 1758479106 8000
.___v_desugar_1 = pyimport "collections"
.collections = pyimport "collections"
.deque: {collections.Deque!}
.heapq = pyimport "heapq"

.plt = pyimport "pyplot"
.pyplot = pyimport "pyplot"

.load_romania_graph: () -> global::Dict!({{"Rimnicu Vilcea"}: global::Dict!({{"Craiova"}: {146}, {"Pitesti"}: {97}, {"Sibiu"}: {80}}), {"Urziceni"}: global::Dict!({{"Hirsova"}: {98}, {"Vaslui"}: {142}, {"Bucharest"}: {85}}), {"Pitesti"}: global::Dict!({{"Craiova"}: {138}, {"Rimnicu Vilcea"}: {97}, {"Bucharest"}: {101}}), {"Drobeta"}: global::Dict!({{"Mehadia"}: {75}, {"Craiova"}: {120}}), {"Arad"}: global::Dict!({{"Sibiu"}: {140}, {"Timisoara"}: {118}, {"Zerind"}: {75}}), {"Lugoj"}: global::Dict!({{"Mehadia"}: {70}, {"Timisoara"}: {111}}), {"Timisoara"}: global::Dict!({{"Arad"}: {118}, {"Lugoj"}: {111}}), {"Hirsova"}: global::Dict!({{"Eforie"}: {86}, {"Urziceni"}: {98}}), {"Eforie"}: global::Dict!({{"Hirsova"}: {86}}), {"Iasi"}: global::Dict!({{"Neamt"}: {87}, {"Vaslui"}: {92}}), {"Neamt"}: global::Dict!({{"Iasi"}: {87}}), {"Vaslui"}: global::Dict!({{"Iasi"}: {92}, {"Urziceni"}: {142}}), {"Craiova"}: global::Dict!({{"Pitesti"}: {138}, {"Rimnicu Vilcea"}: {146}, {"Drobeta"}: {120}}), {"Oradea"}: global::Dict!({{"Sibiu"}: {151}, {"Zerind"}: {71}}), {"Fagaras"}: global::Dict!({{"Sibiu"}: {99}, {"Bucharest"}: {211}}), {"Zerind"}: global::Dict!({{"Arad"}: {75}, {"Oradea"}: {71}}), {"Mehadia"}: global::Dict!({{"Drobeta"}: {75}, {"Lugoj"}: {70}}), {"Sibiu"}: global::Dict!({{"Oradea"}: {151}, {"Rimnicu Vilcea"}: {80}, {"Arad"}: {140}, {"Fagaras"}: {99}}), {"Giurgiu"}: global::Dict!({{"Bucharest"}: {90}}), {"Bucharest"}: global::Dict!({{"Giurgiu"}: {90}, {"Urziceni"}: {85}, {"Pitesti"}: {101}, {"Fagaras"}: {211}})})
.load_sld_to_bucharest: () -> global::Dict!({{"Rimnicu Vilcea"}: {193}, {"Urziceni"}: {80}, {"Pitesti"}: {100}, {"Drobeta"}: {242}, {"Arad"}: {366}, {"Lugoj"}: {244}, {"Timisoara"}: {329}, {"Hirsova"}: {151}, {"Eforie"}: {161}, {"Iasi"}: {226}, {"Neamt"}: {234}, {"Vaslui"}: {199}, {"Craiova"}: {160}, {"Oradea"}: {380}, {"Fagaras"}: {176}, {"Zerind"}: {374}, {"Mehadia"}: {241}, {"Sibiu"}: {253}, {"Giurgiu"}: {77}, {"Bucharest"}: {0}})
.bfs: (graph: global::Indexable(Obj, global::GenericDict), start: Obj, goal: Obj) -> global::Tuple([global::List!(Never, 0), Float, Nat, Nat])
.dfs: (graph: global::Indexable(Obj, global::GenericDict), start: Obj, goal: Obj) -> global::Tuple([global::List!(Never, 0), Float, Nat, Nat])
.greedy_best_first: (graph: global::Indexable(Obj, global::GenericDict), start: Obj, goal: Obj, heuristic: (Obj) -> Never) -> global::Tuple([global::List!(Never, 0), Float, Nat, Nat])
.a_star: |Type_104054 :> not Obj|(graph: global::Indexable(Obj, global::GenericDict), start: Type_104054, goal: Obj, heuristic: (Type_104054) -> Never) -> global::Tuple([global::List!(Never, 0), Float, Nat, Nat])
.heuristic_bucharest: |T: Type|(city: Obj, sld: global::Indexable(Obj, Never) or global::List(T, _: Nat) or global::GenericDict) -> NoneType or T
.heuristic_abs_diff: (city: Obj, goal: Obj, sld: global::List(Never, _: Nat) or global::GenericDict) -> Nat
.run_experiments: () -> global::Dict!({Str: global::Tuple([global::List!(Never, 0), Float, Nat, Nat])})
.plot_results: (results: global::Dict(_: global::GenericDict)) -> NoneType
.main: () -> NoneType




